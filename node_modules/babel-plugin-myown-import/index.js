const types = require('@babel/types');

const visitor = {
     // AST中type为ImportDeclaration（import）结点会在这个地方进行处理）
    ImportDeclaration(path, ref = {}) {
      let { opts } = ref
      let node = path.node;
      let specifiers = node.specifiers;
      if (opts.library == node.source.value && !types.isImportDeclaration(specifiers[0])) {
        let newImport = specifiers.map((specifier) => (
          types.importDeclaration([types.ImportDefaultSpecifier(specifier.local)], types.stringLiteral(`${node.source.value}/${specifier.local.name}`))
        ));
        path.replaceWithMultiple(newImport)
      }
    },
    // AST中type为VariableDeclaration（变量声明的结点会在这个地方进行处理）
    VariableDeclaration(path, ref = {}){
      // console.log('VariableDeclaration node:', path.node);
    }
  }

module.exports = function () {
  return {
    visitor
  };
}